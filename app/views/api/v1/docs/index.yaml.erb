swagger: "2.0"
info:
  version: "1.0.0"
  title: "Realtime Chat"
host: <%= request.host_with_port %>
basePath: "/api/v1"
responses:
  401:
    description: Invalid or expired token
  404:
    description: Record or page not found
securityDefinitions:
  User:
    type: apiKey
    name: Token
    in: header

paths:
  /authentications:
    post:
      tags:
        - Authentication
      parameters:
        - in: formData
          name: email
          required: true
          type: string
          default: user1@example.com
        - in: formData
          name: password
          required: true
          type: string
          default: password
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: integer
              email:
                type: string
              authentication_token:
                type: string
              refresh_token:
                type: string
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                base:
                  - error: email_or_password_invalid
                email:
                  - error: blank
                password:
                  - error: blank
  /authentications/refresh:
    post:
      tags:
        - Authentication
      security:
        - User: []
      parameters:
        - in: "formData"
          name: "token"
          required: true
          type: "string"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              authentication_token:
                type: string
        401:
          description: Invalid refresh token
  /users:
    get:
      tags:
        - Users
      security:
        - User: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    put:
      tags:
        - Users
      security:
        - User: []
      parameters:
        - in: formData
          name: avatar
          type: file
          description: The image to upload.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                file:
                  - error: "You are not allowed to upload \"mp4\" files, allowed types: jpg, jpeg, gif, png"
                  - error: "File size should be less than 5 MB"

  /users/profile:
    get:
      tags:
        - Users
      security:
        - User: []
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              username:
                type: string
                example: user1
              email:
                type: string
                example: user1@example.com
              rooms_activity:
                type: object
                additionalProperties:
                  type: string
                example:
                  1: "2019-07-02T10:21:54Z"
                  2: "2019-07-02T09:45:30Z"
              avatar_url:
                type: string
                example: /uploads/user/avatar/1/thumb_user.jpg
  /rooms:
    get:
      description: |
        Application provides single socket to listen for events from selected room.
        Socket URL is: <%= Rails.application.config.action_cable.url %>.
        Socket requires authentiation using token which needs to be passed in the header as 'Token: value'.
        After succesful connection to socket one needs to subscribe to selected room chanel using command: {"command":"subscribe","identifier":"{\"channel\":\"RoomChannel\",\"room\":\"2\"}"}
        ```
        websocat <%= Rails.application.config.action_cable.url %> -H 'Token: xxxxx'
        {"type":"welcome"}
        > {"command":"subscribe","identifier":"{\"channel\":\"RoomChannel\",\"room\":\"1\"}"}
        {"identifier":"{\"channel\":\"RoomChannel\",\"room\":\"1\"}","type":"confirm_subscription"
        ```
      tags:
        - Rooms
      security:
        - User: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Room'
    post:
      tags:
        - Rooms
      security:
        - User: []
      parameters:
        - in: formData
          name: name
          required: false
          type: string
          description: Required for open and closed rooms, for direct will be ignored
          example: Room 1
        - in: formData
          name: description
          required: false
          type: string
        - in: formData
          name: type
          required: true
          type: string
          enum: [open, closed, direct]
        - in: formData
          name: users_ids
          required: false
          type: string
          description: For closed or direct room - string of users ids separated with comas
          schema:
            type: string
            example: 1,5,17
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Room'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                name:
                  - error: blank
                  - error: illegal_characters
  /rooms/{id}:
    put:
      description: Direct room cannot be updated
      tags:
        - Rooms
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: formData
          name: description
          required: false
          type: string
        - in: formData
          name: name
          required: true
          type: string
        - in: formData
          name: users_ids
          required: false
          type: string
          description: For closed room - string of users ids separated with comas
          schema:
            type: string
            example: 1,5,17
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Room'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                name:
                  - error: blank
                  - error: illegal_characters
    delete:
      description: Direct room cannot be deleted
      tags:
        - Rooms
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: No Content
  /rooms/{id}/update_activity:
    post:
      tags:
        - Rooms
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: No Content
  /rooms/{room_id}/messages:
    get:
      tags:
        - Messages
      security:
        - User: []
      parameters:
        - in: path
          name: room_id
          type: string
          required: true
          default: 1
        - in: query
          name: last_id
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
    post:
      tags:
        - Messages
      security:
        - User: []
      parameters:
        - in: path
          name: room_id
          type: string
          required: true
          default: 1
        - in: formData
          name: body
          required: true
          type: string
          default: Hello
        - in: formData
          name: attachment_ids[]
          required: false
          type: array
          collectionFormat: multi
          items:
            type: integer

      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Message'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                name:
                  - error: blank
  /messages/{id}:
    put:
      tags:
        - Messages
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: formData
          name: body
          required: true
          type: string
          default: Updated message
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Message'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                body:
                  - error: blank
    delete:
      tags:
        - Messages
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: No Content
  /rooms/{room_id}/rooms_users:
    get:
      tags:
        - Rooms Users
      security:
        - User: []
      parameters:
        - in: path
          name: room_id
          type: string
          required: true
          default: 1
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RoomsUsers'
    post:
      tags:
        - Rooms Users
      security:
        - User: []
      parameters:
        - in: path
          name: room_id
          type: string
          required: true
          default: 1
        - in: formData
          name: user_id
          required: false
          type: string
          default: 1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RoomsUsers'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                user:
                  - error: blank
  /rooms_users/{id}:
    delete:
      tags:
        - Rooms Users
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: No Content

  /attachments:
    post:
      tags:
        - Attachments
      security:
        - User: []
      parameters:
        - in: formData
          name: file
          type: file
          description: The file to upload.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Attachment'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                file:
                  - error: blank
  /attachments/{id}:
    delete:
      tags:
        - Attachments
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: No Content

definitions:
  Room:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Room no. 1
      description:
        type: string
        example: Sample description
      channel_name:
        type: string
        example: room:Z2lkOi8vcmVhbHRpbWUtY2hhdC9Sb29tLzY
      user_id:
        type: integer
        example: 1
      type:
        type: string
        example: open
      deleted:
        type: boolean
        example: false
      room_path:
        type: string
        example: /rooms/1
      last_message_at:
        type: string
        example: "2019-07-01T12:50:49Z"
      participants:
        type: array
        items:
          $ref: '#/definitions/User'

  RoomsUsers:
    type: object
    properties:
      id:
        type: integer
        example: 1
      user_id:
        type: integer
        example: 1
      room_id:
        type: integer
        example: 1
      user:
        $ref: '#/definitions/User'

  Message:
    type: object
    properties:
      id:
        type: integer
        example: 1
      user_id:
        type: integer
        example: 2
      room_id:
        type: integer
        example: 1
      body:
        type: string
        example: Hello
      edited:
        type: boolean
        example: false
      deleted:
        type: boolean
        example: false
      user:
        $ref: '#/definitions/User'
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      created_at:
        type: string
        example: "2019-07-01T12:50:49Z"

  User:
    type: object
    properties:
      id:
        type: integer
        example: 1
      username:
        type: string
        example: user1
      email:
        type: string
        example: user1@example.com
      avatar_url:
        type: string
        example: /uploads/user/avatar/1/thumb_user.jpg

  Attachment:
    type: object
    properties:
      id:
        type: integer
        example: 1
      content_type:
        type: string
        example: image/jpeg
      file_size:
        type: integer
        example: 1000
      identifier:
        type: string
        example: 'example.jpeg'
      url:
        type: string
        example: '/uploads/attachment/file/1/example.jpeg'
      thumb_url:
        type: string
        example: '/uploads/attachment/file/1/thumb_example.jpeg'
      created_at:
        type: string
        example: "2019-07-01T12:50:49Z"
