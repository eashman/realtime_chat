swagger: "2.0"
info:
  version: "1.0.0"
  title: "Realtime Chat"
host: <%= request.host_with_port %>
basePath: "/api/v1"
responses:
  401:
    description: Invalid or expired token
  404:
    description: Record or page not found
securityDefinitions:
  User:
    type: apiKey
    name: Token
    in: header

paths:
  /authentications:
    post:
      tags:
        - Authentication
      parameters:
        - in: formData
          name: email
          required: true
          type: string
          default: user1@example.com
        - in: formData
          name: password
          required: true
          type: string
          default: password
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: integer
              email:
                type: string
              authentication_token:
                type: string
              refresh_token:
                type: string
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                base:
                  - error: email_or_password_invalid
                email:
                  - error: blank
                password:
                  - error: blank
  /authentications/refresh:
    post:
      tags:
        - Authentication
      security:
        - User: []
      parameters:
        - in: "formData"
          name: "token"
          required: true
          type: "string"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              authentication_token:
                type: string
        401:
          description: Invalid refresh token
  /rooms:
    get:
      description: |
        Application provides single socket to listen for events from selected room.
        Socket URL is: <%= Rails.application.config.action_cable.url %>.
        Socket requires authentiation using token which needs to be passed in the header as 'Token: value'.
        After succesful connection to socket one needs to subscribe to selected room chanel using command: {"command":"subscribe","identifier":"{\"channel\":\"RoomChannel\",\"room\":\"2\"}"}
        ```
        websocat <%= Rails.application.config.action_cable.url %> -H 'Token: xxxxx'
        {"type":"welcome"}
        > {"command":"subscribe","identifier":"{\"channel\":\"RoomChannel\",\"room\":\"1\"}"}
        {"identifier":"{\"channel\":\"RoomChannel\",\"room\":\"1\"}","type":"confirm_subscription"
        ```
      tags:
        - Rooms
      security:
        - User: []
      responses:
        200:
          description: OK
          schema:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: room 1
                  room_path:
                    type: string
                    example: /rooms/1
    post:
      tags:
        - Rooms
      security:
        - User: []
      parameters:
        - in: formData
          name: name
          required: true
          type: string
          default: Room 1
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: room 1
              channel_name:
                type: string
                example: room:Z2lkOi8vcmVhbHRpbWUtY2hhdC9Sb29tLzEy
              editable:
                type: boolean
                example: true
              room_path:
                type: string
                example: /rooms/1
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                name:
                  - error: blank
  /rooms/{id}:
    put:
      tags:
        - Rooms
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: formData
          name: name
          required: true
          type: string
          default: Room 1
      responses:
        200:
          description: OK
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                name:
                  - error: blank
    delete:
      tags:
        - Rooms
      security:
        - User: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: OK
  /rooms/{room_id}/messages:
    get:
      tags:
        - Messages
      security:
        - User: []
      parameters:
        - in: path
          name: room_id
          type: string
          required: true
          default: 1
        - in: query
          name: last_id
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
    post:
      tags:
        - Messages
      security:
        - User: []
      parameters:
        - in: path
          name: room_id
          type: string
          required: true
          default: 1
        - in: formData
          name: body
          required: true
          type: string
          default: Hello
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Message'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                name:
                  - error: blank
  /rooms/{room_id}/messages/{id}:
    put:
      tags:
        - Messages
      security:
        - User: []
      parameters:
        - in: path
          name: room_id
          type: string
          required: true
          default: 1
        - in: path
          name: id
          type: string
          required: true
        - in: formData
          name: body
          required: true
          type: string
          default: Updated message
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              $ref: '#/definitions/Message'
        422:
          description: Validation error
          schema:
            type: object
            properties:
              errors:
                type: object
            example:
              errors:
                body:
                  - error: blank
    delete:
      tags:
        - Messages
      security:
        - User: []
      parameters:
        - in: path
          name: room_id
          type: string
          required: true
          default: 1
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: OK

definitions:
  Message:
    type: object
    properties:
      id:
        type: integer
        example: 1
      user_id:
        type: integer
        example: 2
      body:
        type: string
        example: Hello
      user:
        type: object
        properties:
          username:
            type: string
            example: user1
      created_at:
        type: string
        example: "2019-04-15T09:41:42.602Z"
      updated_at:
        type: string
        example: "2019-04-15T09:41:42.602Z"
      editable:
        type: boolean
        example: true
